@model HotelBooking.Core.Booking

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>
<h4 class="text-danger">@ViewBag.Status</h4>
<h4>Booking</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input type="date" asp-for="StartDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" required />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input type="date" asp-for="EndDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" required />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <select asp-for="CustomerId" class ="form-control" asp-items="ViewBag.CustomerId" required></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const startDateInput = document.querySelector('input[name="StartDate"]');
        const endDateInput = document.querySelector('input[name="EndDate"]');
        const form = document.querySelector('form');

        function validateDate(event) {
            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);

            if (endDate <= startDate) {
                const errorMessage = "End Date must be after Start Date.";
                endDateInput.setCustomValidity(errorMessage);
                alert(errorMessage); 
                event.preventDefault(); 
            } else {
                endDateInput.setCustomValidity("");
            }
        }

        startDateInput.addEventListener('change', validateDate);
        endDateInput.addEventListener('change', validateDate);

        form.addEventListener('submit', function (event) {
            validateDate(event); 
        });
    });
</script>
